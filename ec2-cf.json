{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "rockstar",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
       
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedValues": ["0.0.0.0/0", "1.2.3.4/32"],  
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "HTTPLocation": {
      "Description": "The IP address range that can be used for HTTP Traffic to the EC2 instances",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedValues": ["0.0.0.0/0", "1.2.3.4/32"], 
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "ICMPLocation": {
      "Description": "The IP address range that can be used for ICMP Traffic to the EC2 instances",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedValues": ["0.0.0.0/0", "1.2.3.4/32"], 
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "TagKey": {
      "Description": "Specify the key for the tag",
      "Type": "String",
      "Default": "Name",
      "ConstraintDescription": "must be a valid tag key."
    },
    "TagValue": {
      "Description": "Specify the value for the tag",
      "Type": "String",
      "Default": "CodeDeployDemo",
      "ConstraintDescription": "must be a valid tag value."
    }
  },
    
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": { "Arch": "HVM64" }
    },
    "AWSInstanceType2NATArch": {
      "t2.micro": { "Arch": "NATHVM64" }
    },
    "AWSRegionArch2AMI": {
      "ap-south-1": { "HVM64": "ami-0a6ed6689998f32a5" }
    }
  },

  "Resources": {

    "s3" : {

    },
    "SampleRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "Sample-iam-Role",
        "Description": "IAM role with codedeploytoEC2fullacess",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["ec2.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "EC2CodeDeployFullAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow", 
                  "Action": ["codedeploy:*"],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["ec2:*"],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "Sample Role"
          },
          {
            "Key": "Purpose",
            "Value": "Tutorial"
          }
        ]
      }
    },
    
    

    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "SecurityGroups": [{ "Ref": "InstanceSecurityGroup" }],
        "KeyName": { "Ref": "KeyName" },
        "ImageId": { "Fn::FindInMap": ["AWSRegionArch2AMI", { "Ref": "AWS::Region" }, { "Fn::FindInMap": ["AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch"] }] }
      }
    },

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access via port 22, HTTP access via port 80 & ICMP access via any port",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp":  { "Ref" : "SSHLocation" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref" : "HTTPLocation" }
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "8",
            "ToPort": "0",
            "CidrIp": { "Ref" : "ICMPLocation" }
          }
        ]
      }
    }
  },

  "Outputs": {
    "InstanceId": {
      "Description": "InstanceId of the newly created EC2 instance",
      "Value": { "Ref": "EC2Instance" }
    },
    "AZ": {
      "Description": "Availability Zone of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": ["EC2Instance", "AvailabilityZone"] }
    },
    "PublicDNS": {
      "Description": "Public DNSName of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": ["EC2Instance", "PublicDnsName"] }
    },
    "PublicIP": {
      "Description": "Public IP address of the newly created EC2 instance",
      "Value": { "Fn::GetAtt": ["EC2Instance", "PublicIp"] }
    }
  }
}